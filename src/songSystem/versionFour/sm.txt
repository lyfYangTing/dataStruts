新需求:要求不能显示出重复的元素

解决方案:用Set集合，可以去重，TreeSet集合，既可以排序也可以去重

对象相等:
    引用相等性和对象相等性
    1)引用相等性，引用到堆同一对象的两个引用是相等的。
      即两个引用调用hashcode(）方法，返回的值是相等的
    2）对象相等性，堆上的两个不同对象在意义上是相同的
       需要根据实际情况，重写hashCode()方法和equals()方法

       if(foo.equals(bar) && foo.hashCode() == bar.hashCode()){
           只有同时满足这两个条件，两个对象才相等
       }

总结:

List:对付顺序的好帮手
     是一种知道索引位置的集合。
     List知道某物在系列集合中的位置。
     可以由多个元素引用相同的对象。

Set:注重独一无二的性质。
    不允许重复的集合。
    它知道某物是否已经存在于集合中。不会有多个元素引用相同的对象
    (被认为相等的两个对象也不行)
     TreeSet集合:可以得到无重复有序的集合:实现有序的两种方法
                 1)TreeSet的元素必须是有实现Comparable的类型
                 2)使用重载，取用Comparator参数的构造函数来创建TreeSet
Map:用key来搜索的专家
    使用成对的键值和数据值。
    Map会维护与key有关联的值。
    两个key可以引用相同的对象，但key不能重复。
    典型的key会是String，但也可以是任何对象。


